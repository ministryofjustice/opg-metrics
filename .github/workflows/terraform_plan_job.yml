on:
  workflow_call:
    inputs:
      terraform_path:
        description: 'The name of the terraform paths'
        required: true
        type: string
      workspace:
        description: 'Terraform workspace'
        required: true
        type: string
      download_artifact:
        description: 'Download Artifact'
        required: false
        default: false
        type: boolean
      download_artifact_name:
        description: 'Artifact name'
        required: false
        type: string
      download_artifact_path_name:
        description: 'Local artifact path location'
        required: false
        type: string
      download_go_artifact_name:
        description: 'Go Artifact name'
        required: false
        type: string
      download_go_artifact_path_name:
        description: 'Local go artifact path location'
        required: false
        type: string
    secrets:
      aws_access_key_id_actions:
        required: true
      aws_secret_access_key_actions:
        required: true

jobs:
  terraform_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Download Artifact
        if: ${{ inputs.download_artifact == true }}
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.download_artifact_name }}
          path: ${{ inputs.download_artifact_path_name }}
      - name: Download go Artifact
        if: ${{ inputs.download_artifact == true }}
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.download_go_artifact_name }}
          path: ${{ inputs.download_go_artifact_path_name }}

      - uses: unfor19/install-aws-cli-action@v1

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.3
          terraform_wrapper: false

      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_actions }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_actions }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGMetricsECRGithubAction

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: ./${{ inputs.terraform_path }}
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./${{ inputs.terraform_path }}

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_timestream_artifact_name: ${{ inputs.download_artifact_name }}
          TF_VAR_timestream_connector_artifact_name: ${{ inputs.download_go_artifact_name }}

        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30
        working-directory: ./${{ inputs.terraform_path }}

      - name: Terraform Apply Environment
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_timestream_artifact_name: ${{ inputs.download_artifact_name }}
          TF_VAR_timestream_connector_artifact_name: ${{ inputs.download_go_artifact_name }}
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./${{ inputs.terraform_path }}
