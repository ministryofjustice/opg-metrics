on:
  workflow_call:
    inputs:
      lambda_name:
        description: 'The name of the lambdas to run'
        required: true
        type: string

jobs:
  test:
    name: Test Lambdas
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lambda_name: ${{ fromJSON(inputs.lambda_name) }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python 3.13.3
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.13.3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest mock
          cd lambda/${{ matrix.lambda_name }}/src
          pip install -r requirements_dev.txt

      - name: Test with pytest
        run: |
          cd lambda/${{ matrix.lambda_name }}/src
          pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.lambda_name }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-results-${{ matrix.lambda_name }}
          path: lambda/${{ matrix.lambda_name }}/src/junit/test-results-${{ matrix.lambda_name }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
