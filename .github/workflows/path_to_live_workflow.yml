name: "[Workflow] Path To Live"

on:
  push:
    branches:
      - main

permissions:
  actions: read
  checks: read
  contents: write
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: write
  statuses: none

jobs:
  test_lambdas:
    name: Test Lambda
    uses: ./.github/workflows/python_build_test_job.yml
    with:
      lambda_name: '["ship-to-opg-metrics", "clsf-to-sqs"]'

  docker_build_scan_push:
    name: Build, Scan and Push
    needs: ['test_lambdas']
    uses: ./.github/workflows/docker_job.yml
    with:
      lambda_names: '["ship-to-opg-metrics", "clsf-to-sqs"]'
    secrets:
      source_github_token: ${{ secrets.GITHUB_TOKEN }}
      aws_access_key_id_actions: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      aws_secret_access_key_actions: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}

  tfsec:
    uses: ministryofjustice/opg-github-workflows/.github/workflows/analysis-infrastructure-tfsec-pr-feedback.yml@main
    with:
      terraform_path: '["terraform/account", "terraform/environment"]'
      soft_fail: true
    secrets:
      source_github_token: ${{ secrets.GITHUB_TOKEN }}

  terraform_plan_workflow:
    name: Terraform Plan
    needs: ['tfsec']
    uses: ./.github/workflows/terraform_plan_job.yml
    with:
      terraform_path: '["terraform/account", "terraform/environment"]'
    secrets:
      aws_access_key_id_actions: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
      aws_secret_access_key_actions: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}

  terraform_apply_workflow:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: ['terraform_plan_workflow']
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
          fi
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.10
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGMetricsECRGithubAction

      - name: Terraform Init Account
        run: terraform init -input=false
        working-directory: ./terraform/account

      - name: Terraform Apply Account
        env:
          TF_WORKSPACE: development
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/account

      - name: Terraform Init Environment
        run: terraform init -input=false
        working-directory: ./terraform/environment

      - name: Terraform Apply Environment
        env:
          TF_WORKSPACE: development
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/environment
