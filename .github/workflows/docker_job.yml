on:
  workflow_call:
    inputs:
      lambda_name:
        description: 'The name of the lambda Docker container'
        required: true
        type: string

jobs:
  docker_build_scan_push:
    name: Build, Scan and Push Lambdas
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        id: checkout_code
        uses: actions/checkout@v3.0.2

      - name: Build Container
        id: build_container
        run: |
          docker build --file lambda/${{ inputs.lambda_name }}/Dockerfile --tag ${{ inputs.lambda_name }}:latest .

      - name: Trivy Image Vulnerability Scanner
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.3.0
        with:
          image-ref: ${{ inputs.lambda_name }}:latest
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 0.0.0
          DEFAULT_BUMP: minor
          PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/opg-metrics-ci
          role-duration-seconds: 900
          role-session-name: OPGMetricsECRGithubAction
      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1.4.0
        with:
          registries: 311462405659
      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          MAINTENANCE_ECR_REPOSITORY: opg-metrics/${{ inputs.lambda_name }}
        run: |
          docker tag ${{ inputs.lambda_name }}:latest $ECR_REGISTRY/$MAINTENANCE_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          if [ $BRANCH_NAME == "main" ]; then
            docker tag ${{ inputs.lambda_name }}:latest $ECR_REGISTRY/$MAINTENANCE_ECR_REPOSITORY:main-${{ steps.bump_version.outputs.tag }}
            docker tag ${{ inputs.lambda_name }}:latest $ECR_REGISTRY/$MAINTENANCE_ECR_REPOSITORY:latest
          fi
            docker push --all-tags $ECR_REGISTRY/$MAINTENANCE_ECR_REPOSITORY
